--Query 1
-- Selecionar médias de todos os cursos de um determinado tema que possuam pelo menos 50 avaliações ordenadas de maior para menor.
-- (ou seja, queremos selecionar os cursos mais bem avaliados de cada tema) 
SELECT C.TITULO, ROUND(SOMA_AVALIACAO/QTD_AVALIACAO, 1) AS MEDIA_CURSO
FROM CURSO C JOIN ASSUNTO A ON C.TEMA = A.TEMA
WHERE C.QTD_AVALIACAO >= 50 AND UPPER(C.TEMA) = 'MATEMÁTICA'
GROUP BY(C.TITULO, C.TEMA, SOMA_AVALIACAO/QTD_AVALIACAO)
ORDER BY(SOMA_AVALIACAO/QTD_AVALIACAO) DESC;

-- Query 2
-- Selecionar de todos os usuários seu email, nome, número de cursos cursados, 
-- número de cursos concluídos e número de conquistas de cada tipo (estatísticas dos usuários)
SELECT U.NOME, U.EMAIL,
COUNT(CASE WHEN C.PROGRESSO = 'CONCLUIDO' THEN 1 END) CURSOS_CONCLUIDOS,
COUNT(CASE WHEN C.PROGRESSO = 'EM ANDAMENTO' THEN 1 END) CURSOS_EM_ANDAMENTO,
COUNT(CASE WHEN C.PROGRESSO = 'PLANEJADO' THEN 1 END) CURSOS_PLANEJADOS,
(DIAMANTE * 500) + (PLATINA * 300) + (OURO * 200) + (PRATA * 100) + (BRONZE * 50) PONTOS
 
FROM USUARIO U
LEFT JOIN CURSA C ON U.ID = C.USUARIO
INNER JOIN (SELECT U.ID ID,
COUNT(CASE WHEN NIVEL = 'DIAMANTE' THEN 1 END) DIAMANTE,
COUNT(CASE WHEN NIVEL = 'PLATINA' THEN 1 END) PLATINA,
COUNT(CASE WHEN NIVEL = 'OURO' THEN 1 END) OURO,
COUNT(CASE WHEN NIVEL = 'PRATA' THEN 1 END) PRATA,
COUNT(CASE WHEN NIVEL = 'BRONZE' THEN 1 END) BRONZE
FROM USUARIO U
INNER JOIN DESBLOQUEIA_CONQUISTA DC ON DC.USUARIO = U.ID
INNER JOIN CONQUISTAS C ON DC.NOME_CONQUISTA = C.NOME
NATURAL JOIN PONTUACAO_CONQUISTA PC
GROUP BY U.ID, U.EMAIL) TABEL_CONQUISTAS ON U.ID = TABEL_CONQUISTAS.ID
 
GROUP BY U.NOME, U.EMAIL, DIAMANTE, PLATINA, OURO, PRATA, BRONZE
ORDER BY U.NOME;


-- Query  3
-- Selecionar a quantidade de perguntas de todos os quizes de determinado nível de um mesmo tema/subtema (perguntas agrupadas por nível de cada tema)

--internamente contabilizar todas as questões por ID
-- com a tabela de respostas juntar com os temas, subtemas e nivel para ordenação
SELECT Q1.ID, Q1.TEMA, Q1.SUB_TEMA, Q1.NIVEL, Q2.NQUESTIONS
FROM QUIZ Q1 JOIN (
    SELECT Q.ID, COUNT(*) AS NQUESTIONS
    FROM QUIZ_PERGUNTAS QP JOIN QUIZ Q
        ON QP.ID = Q.ID
    GROUP BY
        Q.ID) Q2
    ON Q1.ID = Q2.ID
ORDER BY Q1.TEMA, Q1.SUB_TEMA, Q1.NIVEL;

-- Query 4
-- Selecionar todos os palestrantes que deram os cursos mais bem avaliados de determinado tema (selecionar os melhores palestrantes de cada área) 
SELECT P.NOME, ROUND(AVG(C.SOMA_AVALIACAO / C.QTD_AVALIACAO), 2) AS MEDIA
FROM PALESTRANTE P
INNER JOIN MINISTRA M ON P.ID = M.PALESTRANTE
INNER JOIN CURSO C ON M.CURSO = C.ID
WHERE UPPER(C.TEMA) = 'MATEMÁTICA'
GROUP BY P.NOME
ORDER BY ROUND(AVG(C.SOMA_AVALIACAO / C.QTD_AVALIACAO), 2) DESC;

-- Query 5
-- Fazer ranking entre amigos com base na quantidade de conquistas ordenadas por conquistas de nível alto para baixo (tipo placar de medalhas das olimpíadas) 
SELECT EMAIL,
(DIAMANTE * 500) + (PLATINA * 300) + (OURO * 200) + (PRATA * 100) + (BRONZE * 50) PONTOS,
N_CONQUISTAS,
DIAMANTE, PLATINA, OURO, PRATA, BRONZE
 
FROM (
SELECT EMAILS.ID ID, EMAILS.EMAIL EMAIL, COUNT(C.NOME) N_CONQUISTAS,
COUNT(CASE WHEN NIVEL = 'DIAMANTE' THEN 1 END) DIAMANTE,
COUNT(CASE WHEN NIVEL = 'PLATINA' THEN 1 END) PLATINA,
COUNT(CASE WHEN NIVEL = 'OURO' THEN 1 END) OURO,
COUNT(CASE WHEN NIVEL = 'PRATA' THEN 1 END) PRATA,
COUNT(CASE WHEN NIVEL = 'BRONZE' THEN 1 END) BRONZE
 
FROM (SELECT DISTINCT U.ID, U.EMAIL
FROM USUARIO U INNER JOIN AMIZADE A ON U.ID = A.USUARIO
INNER JOIN DESBLOQUEIA_CONQUISTA DC ON DC.USUARIO = U.ID) EMAILS
INNER JOIN DESBLOQUEIA_CONQUISTA DC ON DC.USUARIO = EMAILS.ID
INNER JOIN CONQUISTAS C ON DC.NOME_CONQUISTA = C.NOME
NATURAL JOIN PONTUACAO_CONQUISTA PC
 
GROUP BY EMAILS.ID, EMAILS.EMAIL
ORDER BY COUNT(C.NOME) DESC)
ORDER BY PONTOS DESC;

-- Query 6
-- Listar todos os usuários que concluíram todos os cursos dados por um determinado palestrante (relevante para poder dar conquistas para usuários que fazem todos os cursos de um mesmo palestrante)
SELECT DISTINCT US.ID, US.NOME
 
FROM USUARIO US
INNER JOIN CURSA C ON US.ID = C.USUARIO
 
WHERE NOT EXISTS ((SELECT M.CURSO
FROM PALESTRANTE P INNER JOIN MINISTRA M ON P.ID = M.PALESTRANTE
WHERE UPPER(P.NOME) = 'FARID TARI')
MINUS
(SELECT C.CURSO
FROM USUARIO U INNER JOIN CURSA C ON U.ID = C.USUARIO
WHERE PROGRESSO = 'CONCLUIDO' AND U.ID = US.ID));


--- Query 7
--- Selecionar todos os quizes dentro de um determinado subtema realizados por um usuário em que a sua pontuação foi abaixo da média:
SELECT U.EMAIL, RQ.QUIZ, RQ.PONTOS, Q.NIVEL
 
FROM USUARIO U
INNER JOIN RESPONDE_QUIZ RQ ON U.ID = RQ.USUARIO
INNER JOIN QUIZ Q ON RQ.QUIZ = Q.ID
INNER JOIN PONTUACAO_CONQUISTA PQ ON UPPER(PQ.NIVEL) = UPPER(Q.NIVEL)
 
WHERE U.EMAIL = 'bermudes@gmail.com.br' AND RQ.PONTOS < 50 AND UPPER(Q.SUB_TEMA) = 'ÁLGEBRA LINEAR'
 
GROUP BY U.EMAIL, RQ.QUIZ, RQ.PONTOS, Q.NIVEL, PQ.ORDEM
ORDER BY PQ.ORDEM ASC;
